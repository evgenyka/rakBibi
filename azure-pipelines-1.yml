
trigger:
- master

jobs:
  - job: 'iOSbuild'
    pool: 
      vmImage: 'macOS-10.13'
    displayName: 'Build IPA file'
    variables:
      scheme: 'rakBibi'
      sdk: 'iphoneos'
      configuration: 'Release'
      teamId: M5H46J4YP8
    steps:
      - task: InstallAppleCertificate@2
        inputs:
          certSecureFile: 'evgeny.karasik@gmail.com_cert.p12'
          #certPwd: $(P12Password)

      - task: InstallAppleProvisioningProfile@1
        inputs:
          provProfileSecureFile: 'evgeny.karasik.mobileprovision'

      - task: Xcode@5
        inputs:
          sdk: '$(sdk)'
          scheme: '$(scheme)'
          configuration: '$(configuration)'
          xcodeVersion: 'default' # Options: default, 10, 9, 8, specifyPath
          exportPath: '$(agent.buildDirectory)/output/$(sdk)/$(configuration)'
          archivePath: '$(Build.ArtifactStagingDirectory)/deploy'
          packageApp: true
          exportTeamId: $(teamId)
          exportOptions: 'specify'
          exportMethod: 'development'
          #signingOption: 'nosign'

      - task: PublishBuildArtifacts@1
        inputs:
          pathToPublish: '$(agent.buildDirectory)/output/$(sdk)/$(configuration)/rakBibi.ipa'
          artifactName: 'rakBibi'
          
      - task: Bash@3
        inputs:
          targetType: 'inline'
          script:
                #python -m pip install --upgrade pip      
                pip install requests    

      - task: PythonScript@0
        inputs:
          scriptSource: 'inline'
          arguments: '$(agent.buildDirectory)/output/$(sdk)/$(configuration)/rakBibi.ipa'
          script: 
            'import sys,json, requests
            PROTOCOL = ''http''
            PORT = ''8080''
          
            SERVER = ''demo.mobilecenter.io''
            USER = ''karasik@microfocus.com''
            PASS = ''Welc0me11''
            FILE = sys.argv[1]
            
            BASE_URL = PROTOCOL + ''://'' + SERVER + '':'' + PORT + ''/rest'' 
            s = requests.Session() 
            # LOGIN 
            url = BASE_URL + ''/client/login'' 
            headers = {''Accept'': ''application/json'' , ''Content-Type'': ''application/json; charset=UTF-8''} 
            payload = {''name'': USER , ''password'': PASS , ''accountName'': ''default''} 
            response = s.post(url, headers=headers, data=json.dumps(payload)) 
            print ("Connect: ", response.status_code)
            
            hp4msecret = response.headers[''x-hp4msecret''] 
            jsession = s.cookies[''JSESSIONID'']
            
            
            if response.status_code == requests.codes.ok: 
            # UPLOAD APP 
                url = BASE_URL + ''/apps'' 
                file = {''fileUpload'': open(FILE, ''rb'')} 
                headers = {''x-hp4msecret'': hp4msecret, ''JSESSIONID'': jsession} 
                response = s.post(url, headers=headers, files=file) 
                print ("Upload: ", response.status_code) 
            
            if response.status_code == requests.codes.ok: 
                print ("App Name:", response.json()["name"]) 
                print ("App Id:", response.json()["id"]) 
                print ("App version:", response.json()["version"]) 
                print ("App Count:", response.json()["count"])'




  #- job: 'uploadArtifact'
  #  displayName: 'Upload IPA file to MC server'
  #  pool: server
  #  steps:
  #  - task: DownloadPipelineArtifact@2
  #    inputs:
  #      artifact: rakBibi
  #  - task: InvokeRESTAPI@1
  #    inputs:
  #      connectionType: 'connectedServiceName'
  #      serviceConnection: 'MC-Demo'
  #      method: 'POST'
  #      headers: '{
  #        "Content-Type":"application/json", 
  #        }'
  #      body: '{
  #          "name": "karasik@microfocus.com",
  #          "password": "Welc0me11"
  #        }'
  #      urlSuffix: 'rest/client/login' # Optional
  #      waitForCompletion: 'false' # Options: true, false
  #      successCriteria: 200 # Optional
